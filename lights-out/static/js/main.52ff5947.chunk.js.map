{"version":3,"sources":["logo.svg","Components/Cell.js","Components/CellRow.js","Components/Button.js","Components/WinBanner.js","Components/GameBoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StyledCell","styled","div","_templateObject","props","status","Cell","react_default","a","createElement","onClick","changer","row","col","CellRow","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","cells","map","c","i","Components_Cell","StyledRow","style","display","justifyContent","Component","CellRow_templateObject","Button","width","height","alignSelf","margin","fontSize","background","border","color","borderRadius","boxShadow","children","WinBanner","zIndex","position","left","bottom","right","top","flexDirection","opacity","win","transition","animation","Components_Button","newGame","GameBoard","state","boardTiles","bind","assertThisInitialized","randomise","randomiseBoard","winCondition","reset","toConsumableArray","length","j","setState","objectSpread","console","log","max","Math","floor","random","limit","tester","_this2","cellRows","cR","Components_CellRow","Components_WinBanner","padding","maxWidth","ReturnToHome","App_templateObject","StyledA","_templateObject2","StyledH1","h1","_templateObject3","App","className","window","history","back","Components_GameBoard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52ff5947.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Cell = props => {\r\n  let handleClick = () =>{\r\n    props.changer(props.row, props.col)\r\n  }\r\n  let style= {\r\n    width: \"80px\",\r\n    height: \"80px\",\r\n    background: props.status ? \"#38a1e6\": \"#797979\",\r\n    margin: \"5px\",\r\n    boxShadow: props.status ? \"0px 0px 6px 4px #00fffa33,  1px 2px 6px 1px #aeaeaeae\" : \"1px 2px 6px 1px #aeaeaeae\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\"\r\n  }\r\n  return(\r\n    <StyledCell status = {props.status} onClick = {handleClick}> </StyledCell>\r\n  )\r\n}\r\n\r\nlet StyledCell = styled.div`\r\nflex: 1 1 20%;\r\njustify-content: center;\r\nbackground: ${props => props.status ? \"#38a1e6\": \"#797979\"}\r\nmargin: 5px;\r\nbox-shadow: ${props => props.status ? \"0px 0px 6px 4px #00fffa33,  1px 2px 6px 1px #aeaeaeae\" : \"1px 2px 6px 1px #aeaeaeae\"}\r\ntransition: all 0.3s ease-in-out;\r\nborder: none;\r\nborder-radius: 5px;\r\n&:before {\r\n  content:'';\r\n     float:left;\r\n     padding-top:100%;\r\n}\r\n\r\n\r\n`\r\n\r\nexport default Cell\r\n","import React, {Component} from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport styled from \"styled-components\";\r\nclass CellRow extends Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    let style= {\r\n      display: \"flex\",\r\n      justifyContent: \"center\"\r\n    }\r\n    let cells = this.props.cells.map((c, i) => {\r\n      return <Cell status={c} changer = {this.props.changer} row = {this.props.row} col={i}/>\r\n    })\r\n    return(\r\n      <StyledRow style={style}>\r\n      {cells}\r\n      </StyledRow>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet StyledRow = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n\r\n`\r\n\r\nexport default CellRow\r\n","import React, {Component} from \"react\";\r\n\r\nconst Button = props => {\r\n  let style = {\r\n    width: \"40%\",\r\n    height: \"60px\",\r\n    alignSelf: \"center\",\r\n    margin: \"4%\",\r\n    fontSize: \"1.5rem\",\r\n    background: \"#9c6ccc\",\r\n    border: \"1px solid grey\",\r\n    color: \"white\",\r\n    borderRadius: \"5px\",\r\n    boxShadow:  \"1px 2px 6px 1px #9c6cccae\"\r\n\r\n    }\r\n  return(\r\n    <button style={style} onClick={props.onClick}>{props.children}</button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport { Transition ,TransitionGroup, animateOnEnter, animateOnExit } from 'react-transition-group';\r\nconst WinBanner = props => {\r\n  const fadeIn = `@keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n  const style = {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    background: \"#61dafbe0\",\r\n    zIndex: \"10\",\r\n    position: \"absolute\",\r\n    left: \"0\",\r\n    bottom: \"0\",\r\n    right: \"0\",\r\n    top:\"0\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    opacity: props.win ? \"1\" : \"0\",\r\n    transition: `opacity 300ms ease-in-out`,\r\n    animation: `fadeIn 150ms ease-in`\r\n  }\r\n\r\n  const transitionStyles = {\r\n  entering: { opacity: 1 },\r\n  entered:  { opacity: 1 },\r\n  exiting:  { opacity: 0 },\r\n  exited:  { opacity: 0 },\r\n};\r\n  return(\r\n      <div style ={style}>\r\n        <h2>Congratulations!</h2>\r\n        <Button onClick={props.newGame} > Play again? </Button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default WinBanner\r\n","import React, {Component} from \"react\";\r\nimport CellRow from \"./CellRow\";\r\nimport Button from \"./Button\";\r\nimport WinBanner from \"./WinBanner\";\r\nclass GameBoard extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        boardTiles: [\r\n                      [0, 0, 0, 0, 0],\r\n                      [0, 0, 1, 0, 0],\r\n                      [0, 1, 1, 1, 0],\r\n                      [0, 0, 1, 0, 0],\r\n                      [0, 0, 0, 0, 0],\r\n                    ],\r\n        win: false\r\n    }\r\n    this.changer = this.changer.bind(this);\r\n    this.newGame = this.newGame.bind(this);\r\n    this.randomise = this.randomise.bind(this);\r\n    this.randomiseBoard = this.randomiseBoard.bind(this);\r\n    this.winCondition = this.winCondition.bind(this);\r\n    this.reset   = this.reset.bind(this)\r\n  }\r\n  changer(row, col){\r\n    let boardTiles = [...this.state.boardTiles];\r\n    for(let i = 0; i < boardTiles.length; i++){\r\n      if(i === row){\r\n        for(let j = 0; j<boardTiles[row].length; j++){\r\n          if(row+1 < boardTiles[row].length){\r\n            boardTiles[row+1][col] = !boardTiles[row+1][col]\r\n          }\r\n          if(row-1 >= 0){\r\n            boardTiles[row-1][col] = !boardTiles[row-1][col]\r\n          }\r\n          boardTiles[row][col]   = !boardTiles[row][col]\r\n          if(col+1 < boardTiles.length){\r\n            boardTiles[row][col+1] = !boardTiles[row][col+1]\r\n          }\r\n          if(col-1 >= 0){\r\n            boardTiles[row][col-1] = !boardTiles[row][col-1]\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState(boardTiles)\r\n    if(this.winCondition()){\r\n      this.setState({\r\n        ...this.state,\r\n        win: true\r\n      })\r\n    }\r\n    console.log(this.state)\r\n  }\r\n  reset(){\r\n    let boardTiles = [...this.state.boardTiles];\r\n    for(let i = 0; i <boardTiles.length; i++){\r\n      for(let j = 0; j < boardTiles[i].length; j++){\r\n        boardTiles[i][j] = 0;\r\n      }\r\n    }\r\n  }\r\n  newGame(){\r\n    let boardTiles = [...this.state.boardTiles];\r\n    this.reset();\r\n    this.randomiseBoard(boardTiles);\r\n    this.setState({boardTiles, win: false})\r\n  }\r\n  randomise(max){\r\n      return Math.floor(Math.random() * max)\r\n  }\r\n  randomiseBoard(boardTiles){\r\n    let limit = 5;\r\n    let length = boardTiles.length;\r\n    for(let i = 0; i < length; i ++){\r\n      let row = this.randomise(length)\r\n      for(let j = 0; j < length; i++){\r\n        this.randomise(length)\r\n        if(limit > 0){\r\n          boardTiles[this.randomise(length)][this.randomise(length)] = 1;\r\n          limit--\r\n        }\r\n        else{\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  winCondition(){\r\n    let boardTiles = [...this.state.boardTiles];\r\n    let tester = 0;\r\n    for(let i = 0; i < boardTiles.length; i++){\r\n      for(let j = 0; j < boardTiles[i].length; j++){\r\n        if(boardTiles[i][j]){\r\n          tester ++\r\n        }\r\n      }\r\n    }\r\n    if(tester ===0){\r\n      return true\r\n    }\r\n    else{return false}\r\n  }\r\n  render(){\r\n\r\n    // console.log(this.state.boardTiles[0][2])\r\n    let cellRows = this.state.boardTiles.map((cR, i) => {\r\n      return <CellRow cells={cR} changer = {this.changer} row = {i} />\r\n    })\r\n    let style = {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-around\",\r\n      background: \"white\",\r\n      padding: \"50px\",\r\n      boxShadow: \"1px 1px 4px #aeaeaeae\",\r\n      width: \"50%\",\r\n      maxWidth:\"600px\"\r\n    }\r\n    let winCondition = this.state.win && <WinBanner newGame={this.newGame} win={this.state.win} />\r\n    return(\r\n      <div style={style}>\r\n      {cellRows}\r\n      {winCondition}\r\n      <Button onClick={this.newGame}>New Game</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GameBoard;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport GameBoard from \"./Components/GameBoard\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <ReturnToHome>\n      <StyledA onClick={() => window.history.back()}>  {`<< Return to home`} </StyledA>\n      <StyledH1 onClick={() => window.history.back()}> Anthony Ashurst</StyledH1>\n    </ReturnToHome>\n    <h1> LIGHTS OUT </h1>\n      <GameBoard />\n    </div>\n  );\n}\n\nlet ReturnToHome = styled.div`\nposition: absolute;\ntop:0;\nwidth:100%;\nheight: 60px;\ndisplay: flex;\njustify-content: space-between;\nbackground: #FF7972;\nline-height: 40px;\nbox-shadow: inset 0px -1px 3px  #00000040;\nalign-items: center;\n@media only screen and (max-width: 800px) {\n  height: 40px;\n  line-height: 40px;\n\n}\n`\n\nlet StyledA = styled.a`\ncolor: white;\ncursor: pointer;\n`\nlet StyledH1 = styled.h1`\ncolor: white;\ntext-shadow: 0 1px 0 #cccccc, 0 2px 0 #c9c9c9, 0 3px 0 #bbbbbb, 0 4px 0 #b9b9b9, 0 5px 0 #aaaaaa, 0 6px 1px rgba(0,0,0,0.1), 0 0 5px rgba(0,0,0,0.1), 0 1px 3px rgba(0,0,0,0.3), 0 3px 5px rgba(0,0,0,0.2), 0 5px 10px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.2), 0 20px 20px rgba(0,0,0,0.15);\nfont-family: 'Kaushan Script',cursive;\nfont-size: 30px;\nmargin: 0px;\nposition: absolute;\ntop: 0;\nright: 0;\nmargin-right: 20px;\n-webkit-transition: all 0.3s ease;\ntransition: all 0.3s ease;\ncursor: pointer;\n@media only screen and (max-width: 800px) {\n  text-align: center;\n  font-size: 20px;\n\n}\n\n`\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}