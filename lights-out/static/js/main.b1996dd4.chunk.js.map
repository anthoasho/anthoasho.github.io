{"version":3,"sources":["logo.svg","Components/Cell.js","Components/CellRow.js","Components/Button.js","Components/WinBanner.js","Components/GameBoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Cell","props","style","width","height","background","status","margin","boxShadow","transition","border","borderRadius","react_default","a","createElement","onClick","changer","row","col","CellRow","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","cells","map","c","i","Components_Cell","display","Component","Button","alignSelf","fontSize","color","children","WinBanner","zIndex","position","left","bottom","right","top","flexDirection","justifyContent","opacity","win","animation","Components_Button","newGame","GameBoard","state","boardTiles","bind","assertThisInitialized","randomise","randomiseBoard","winCondition","reset","toConsumableArray","length","j","setState","objectSpread","console","log","max","Math","floor","random","limit","tester","_this2","cellRows","cR","Components_CellRow","Components_WinBanner","padding","App","className","Components_GameBoard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1996dd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\n\r\nconst Cell = props => {\r\n  let handleClick = () =>{\r\n    props.changer(props.row, props.col)\r\n  }\r\n  let style= {\r\n    width: \"80px\",\r\n    height: \"80px\",\r\n    background: props.status ? \"#38a1e6\": \"#797979\",\r\n    margin: \"5px\",\r\n    boxShadow: props.status ? \"0px 0px 6px 4px #00fffa33,  1px 2px 6px 1px #aeaeaeae\" : \"1px 2px 6px 1px #aeaeaeae\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\"\r\n  }\r\n  return(\r\n    <div style={style} onClick = {handleClick}> </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Cell\r\n","import React, {Component} from \"react\";\r\nimport Cell from \"./Cell\";\r\n\r\nclass CellRow extends Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    let style= {\r\n      display: \"flex\"\r\n    }\r\n    let cells = this.props.cells.map((c, i) => {\r\n      return <Cell status={c} changer = {this.props.changer} row = {this.props.row} col={i}/>\r\n    })\r\n    return(\r\n      <div style={style}>\r\n      {cells}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CellRow\r\n","import React, {Component} from \"react\";\r\n\r\nconst Button = props => {\r\n  let style = {\r\n    width: \"40%\",\r\n    height: \"60px\",\r\n    alignSelf: \"center\",\r\n    margin: \"4%\",\r\n    fontSize: \"1.5rem\",\r\n    background: \"#9c6ccc\",\r\n    border: \"1px solid grey\",\r\n    color: \"white\",\r\n    borderRadius: \"5px\",\r\n    boxShadow:  \"1px 2px 6px 1px #9c6cccae\"\r\n\r\n    }\r\n  return(\r\n    <button style={style} onClick={props.onClick}>{props.children}</button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport { Transition ,TransitionGroup, animateOnEnter, animateOnExit } from 'react-transition-group';\r\nconst WinBanner = props => {\r\n  const fadeIn = `@keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n  const style = {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    background: \"#61dafbe0\",\r\n    zIndex: \"10\",\r\n    position: \"absolute\",\r\n    left: \"0\",\r\n    bottom: \"0\",\r\n    right: \"0\",\r\n    top:\"0\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    opacity: props.win ? \"1\" : \"0\",\r\n    transition: `opacity 300ms ease-in-out`,\r\n    animation: `fadeIn 150ms ease-in`\r\n  }\r\n\r\n  const transitionStyles = {\r\n  entering: { opacity: 1 },\r\n  entered:  { opacity: 1 },\r\n  exiting:  { opacity: 0 },\r\n  exited:  { opacity: 0 },\r\n};\r\n  return(\r\n      <div style ={style}>\r\n        <h2>Congratulations!</h2>\r\n        <Button onClick={props.newGame} > Play again? </Button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default WinBanner\r\n","import React, {Component} from \"react\";\r\nimport CellRow from \"./CellRow\";\r\nimport Button from \"./Button\";\r\nimport WinBanner from \"./WinBanner\";\r\nclass GameBoard extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        boardTiles: [\r\n                      [0, 0, 0, 0, 0],\r\n                      [0, 0, 1, 0, 0],\r\n                      [0, 1, 1, 1, 0],\r\n                      [0, 0, 1, 0, 0],\r\n                      [0, 0, 0, 0, 0],\r\n                    ],\r\n        win: false\r\n    }\r\n    this.changer = this.changer.bind(this);\r\n    this.newGame = this.newGame.bind(this);\r\n    this.randomise = this.randomise.bind(this);\r\n    this.randomiseBoard = this.randomiseBoard.bind(this);\r\n    this.winCondition = this.winCondition.bind(this);\r\n    this.reset   = this.reset.bind(this)\r\n  }\r\n  changer(row, col){\r\n    let boardTiles = [...this.state.boardTiles];\r\n    for(let i = 0; i < boardTiles.length; i++){\r\n      if(i === row){\r\n        for(let j = 0; j<boardTiles[row].length; j++){\r\n          if(row+1 < boardTiles[row].length){\r\n            boardTiles[row+1][col] = !boardTiles[row+1][col]\r\n          }\r\n          if(row-1 >= 0){\r\n            boardTiles[row-1][col] = !boardTiles[row-1][col]\r\n          }\r\n          boardTiles[row][col]   = !boardTiles[row][col]\r\n          if(col+1 < boardTiles.length){\r\n            boardTiles[row][col+1] = !boardTiles[row][col+1]\r\n          }\r\n          if(col-1 >= 0){\r\n            boardTiles[row][col-1] = !boardTiles[row][col-1]\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState(boardTiles)\r\n    if(this.winCondition()){\r\n      this.setState({\r\n        ...this.state,\r\n        win: true\r\n      })\r\n    }\r\n    console.log(this.state)\r\n  }\r\n  reset(){\r\n    let boardTiles = [...this.state.boardTiles];\r\n    for(let i = 0; i <boardTiles.length; i++){\r\n      for(let j = 0; j < boardTiles[i].length; j++){\r\n        boardTiles[i][j] = 0;\r\n      }\r\n    }\r\n  }\r\n  newGame(){\r\n    let boardTiles = [...this.state.boardTiles];\r\n    this.reset();\r\n    this.randomiseBoard(boardTiles);\r\n    this.setState({boardTiles, win: false})\r\n  }\r\n  randomise(max){\r\n      return Math.floor(Math.random() * max)\r\n  }\r\n  randomiseBoard(boardTiles){\r\n    let limit = 5;\r\n    let length = boardTiles.length;\r\n    for(let i = 0; i < length; i ++){\r\n      let row = this.randomise(length)\r\n      for(let j = 0; j < length; i++){\r\n        this.randomise(length)\r\n        if(limit > 0){\r\n          boardTiles[this.randomise(length)][this.randomise(length)] = 1;\r\n          limit--\r\n        }\r\n        else{\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  winCondition(){\r\n    let boardTiles = [...this.state.boardTiles];\r\n    let tester = 0;\r\n    for(let i = 0; i < boardTiles.length; i++){\r\n      for(let j = 0; j < boardTiles[i].length; j++){\r\n        if(boardTiles[i][j]){\r\n          tester ++\r\n        }\r\n      }\r\n    }\r\n    if(tester ===0){\r\n      return true\r\n    }\r\n    else{return false}\r\n  }\r\n  render(){\r\n\r\n    // console.log(this.state.boardTiles[0][2])\r\n    let cellRows = this.state.boardTiles.map((cR, i) => {\r\n      return <CellRow cells={cR} changer = {this.changer} row = {i} />\r\n    })\r\n    let style = {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-around\",\r\n      background: \"white\",\r\n      padding: \"50px\",\r\n      boxShadow: \"1px 1px 4px #aeaeaeae\"\r\n    }\r\n    let winCondition = this.state.win && <WinBanner newGame={this.newGame} win={this.state.win} />\r\n    return(\r\n      <div style={style}>\r\n      {cellRows}\r\n      {winCondition}\r\n      <Button onClick={this.newGame}>New Game</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GameBoard;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport GameBoard from \"./Components/GameBoard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <h1> LIGHTS OUT </h1>\n      <GameBoard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}